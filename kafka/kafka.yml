apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  labels:
    io.kompose.service: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: kafka
    spec:
      containers:
        - name: kafka
          image: docker.io/bitnami/kafka:2.8
          env:
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://:9092
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:9092
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: zookeeper:2181
          ports:
            - containerPort: 9092
          volumeMounts:
            - mountPath: /bitnami
              name: kafka-data
      restartPolicy: Always
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-data
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    io.kompose.service: kafka
spec:
  ports:
    - name: "9092"
      port: 9092
      targetPort: 9092
  selector:
    io.kompose.service: kafka
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-data
  labels:
    io.kompose.service: kafka-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
